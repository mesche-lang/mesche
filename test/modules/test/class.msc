(define-module (test class)
  (import (mesche class)
          (mesche test)))

(suite "(mesche class)" 'only
  (lambda ()

    (suite "bootstrapping:"
      (lambda ()

        (verify "classes can be defined using the bootstrapped <class>"
          (lambda ()
            (let ((<foo> (make <class> '<foo>
                           'direct-fields '(bar baz)
                           'direct-parents (list <object>))))
              (assert-equal? '(bar baz)
                             (field-ref <foo> 'direct-fields))
              (assert-equal? (list <foo> <object> <top>)
                             (field-ref <foo> 'precedence)))))

        ;; (verify "class instances can be created and fields accessed"
        ;;   (lambda ()
        ;;     (let ((<foo> (make <class> '<foo>
        ;;                    'direct-fields '(bar baz)
        ;;                    'direct-parents (list <object>)))
        ;;           (foo nil))
        ;;       (display "\nBEFORE MAKE FOO\n")
        ;;       (set! foo (make <foo>
        ;;                   'bar 5
        ;;                   'baz "hello"))

        ;;       (display "AFTER MAKE FOO\n")
        ;;       (display foo)
        ;;       (display "\n")
        ;;       (assert-equal? 5 (field-ref foo 'bar))
        ;;       (assert-equal? "hello" (field-ref foo 'baz)))))
        ))))
