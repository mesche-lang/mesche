(define-module (mesche cli)
  (import (mesche fs)
          (mesche build)
          (mesche string)
          (mesche project)
          (mesche process)))

(define muslc-path (string-append (path-resolve "./deps/musl/bin/x86_64-linux-musl-gcc")
                                  " -static"))

(project :name "Mesche Command Line Interface"
         :url "https://github.com/mesche-lang/cli"
         :version "0.0.1"
         :description "This is the command line interface for the Mesche language."

         :deps (list (musl-toolchain))

         :configs (list (config :name "dev"
                                :default t
                                :output-path "./bin/dev"
                                :c-compiler "gcc"
                                :c-flags "-O0 -g -ggdb -DDEV_BUILD -fsanitize=address")

                        (config :name "debug"
                                :output-path "./bin/debug"
                                :c-compiler muslc-path
                                :c-flags "-O0 -g -ggdb -DDEBUG -fPIE")

                        (config :name "release"
                                :output-path "./bin/release"
                                :c-compiler muslc-path
                                :c-flags "-O2 -fPIE"))

         :tasks (list (task :name 'mesche-cli:bin
                            :description "Builds the Mesche CLI program."
                            :runs (steps (build-project "../compiler/project.msc"
                                                        :task 'mesche-compiler:lib
                                                        :config (from-context 'config :name))

                                         (compile-source :source-files (list "main.c")
                                                         :mesche-main "modules/main.msc"
                                                         :c-flags (from-context '(config mesche-compiler:lib) :c-flags)
                                                         :c-libs (from-context '(config mesche-compiler:lib) :c-libs))

                                         (link-program :name "mesche"
                                                       :input-files (collect '((mesche-cli:bin/compile-source :object-files)
                                                                               (mesche-compiler:lib :library-path)))
                                                       :c-libs (from-context '(config
                                                                               mesche-cli:bin/compile-source
                                                                               mesche-compiler:lib)
                                                                             :c-libs))))

                      (task :name 'mesche-cli:dist
                            :description "Prepares the Mesche CLI distribution."
                            :default #t
                            :runs (steps (build-task 'mesche-cli:bin)
                                         (lambda (project task context)
                                           ;; TODO: Clean existing dist folder?
                                           (let ((dist-path (path-ensure (string-append "./dist/"
                                                                                        (context-get context 'config :name)))))
                                             ;; Copy the binary output
                                             (process-start-sync
                                              (string-append "cp "
                                                             (context-get context 'mesche-cli:bin/program :program-path)
                                                             " "
                                                             dist-path))

                                             ;; Copy module paths to the output folder
                                             (process-start-sync
                                              (string-append  "cp -R "
                                                              (context-get context 'mesche-compiler:lib :module-path)
                                                              " "
                                                              dist-path))

                                             (process-start-sync
                                              (string-append "cp -R ./modules " dist-path))

                                             (finalize-step 'dist :dist-path dist-path)))))))
