(define-module (mesche cli)
  (import (mesche fs)
          (mesche build)
          (mesche string)
          (mesche project)
          (mesche process)))

(project :name "Mesche Command Line Interface"
         :url "https://github.com/mesche-lang/cli"
         :version "0.0.1"
         :description "This is the command line interface for the Mesche language."

         :deps (list (musl-toolchain)
                     (mesche-lib "mesche-lang/compiler"))

         :configs (list (config :name "dev"
                                :default t
                                :output-path "./bin/dev"
                                :c-compiler "gcc"
                                :c-flags "-O0 -g -ggdb -DDEV_BUILD -fsanitize=address")

                        (config :name "debug"
                                :output-path "./bin/debug"
                                :c-compiler "./deps/musl/bin/x86_64-linux-musl-gcc -static"
                                :c-flags "-O0 -g -ggdb -DDEBUG -fPIE")

                        (config :name "release"
                                :output-path "./bin/release"
                                :c-compiler "./deps/musl/bin/x86_64-linux-musl-gcc -static"
                                :c-flags "-O2 -fPIE"))

         :targets (list (target :name "main"
                                :description "Builds the Mesche CLI program."
                                :default t
                                :runs (steps (build-project "./deps/mesche-lang/compiler/project.msc" :target "lib")
                                             (compile-source :source-files (list "main.c")
                                                             :mesche-main "modules/main.msc")
                                             (link-program "mesche")))

                        (target :name "dist"
                                :description "Prepares the Mesche CLI distribution."
                                :runs (steps (build-target "main")
                                             (lambda (project config outputs)
                                               ;; TODO: Clean existing dist folder?
                                               (path-ensure "./dist")
                                               (process-start-sync (string-append "cp "
                                                                                  (project-config-output-path config)
                                                                                  "/mesche "
                                                                                  "dist/"))
                                               (process-start-sync "cp -R ./modules ./dist")
                                               nil)))))
