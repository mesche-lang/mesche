(define-module (mesche compiler)
  (import (mesche fs)
          (mesche build)
          (mesche string)
          (mesche project)))

(project :name "Mesche Compiler"
         :url "https://github.com/mesche-lang/compiler"
         :version "0.0.1"
         :description "This is the compiler for the Mesche language."

         :deps (list (musl-toolchain))

         :configs (list (config :name "dev"
                                :output-path "./bin/dev"
                                :c-compiler "gcc"
                                :c-flags "-O0 -g -ggdb -DDEV_BUILD -fsanitize=address"
                                :default t)

                        (config :name "debug"
                                :output-path "./bin/debug"
                                :c-compiler "./deps/musl/bin/x86_64-linux-musl-gcc -static"
                                :c-flags "-O0 -g -ggdb -DDEBUG -fPIE")

                        (config :name "release"
                                :output-path "./bin/release"
                                :c-compiler "./deps/musl/bin/x86_64-linux-musl-gcc -static"
                                :c-flags "-O2 -fPIE"))

         :tasks (list (task :name 'mesche-compiler:lib
                            :description "Builds the Mesche compiler library."
                            :default t
                            :runs (steps (compile-source :source-files
                                                         '("array.c" "chunk.c" "closure.c"
                                                           "compiler.c" "continuation.c"
                                                           "core.c" "disasm.c" "fs.c"
                                                           "function.c" "gc.c" "io.c"
                                                           "keyword.c" "list.c" "math.c"
                                                           "mem.c" "module.c" "native.c"
                                                           "object.c" "process.c" "reader.c"
                                                           "record.c" "repl.c" "scanner.c"
                                                           "string.c" "symbol.c" "syntax.c"
                                                           "table.c" "time.c" "value.c" "vm.c"))
                                         (create-static-library :library-name "libmesche.a"
                                                                :input-files (from-context 'mesche-compiler:lib/compile-source
                                                                                           :object-files))
                                         (provide-context :c-libs "-lm"
                                                          :c-flags (string-append "-I " (path-resolve "./include"))
                                                          :module-path (path-resolve "./modules")
                                                          :library-path (from-context 'mesche-compiler:lib/static-library
                                                                                      :library-path))))))
