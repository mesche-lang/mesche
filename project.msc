(define-module (mesche compiler)
  (import (mesche fs)
          (mesche build)
          (mesche string)
          (mesche project)))

(project :name "Mesche Compiler"
         :url "https://github.com/mesche-lang/compiler"
         :version "0.0.1"
         :description "This is the compiler for the Mesche language."

         :deps (list (musl-toolchain))

         :configs (list (config :name "dev"
                                :output-path "./bin/dev"
                                :c-compiler "gcc"
                                :c-flags "-O0 -g -ggdb -DDEV_BUILD -fsanitize=address"
                                :default t)

                        (config :name "debug"
                                :output-path "./bin/debug"
                                :c-compiler "./deps/musl/bin/x86_64-linux-musl-gcc -static"
                                :c-flags "-O0 -g -ggdb -DDEBUG -fPIE")

                        (config :name "release"
                                :output-path "./bin/release"
                                :c-compiler "./deps/musl/bin/x86_64-linux-musl-gcc -static"
                                :c-flags "-O2 -fPIE"))

         :targets (list (target :name "lib"
                                :description "Builds the Mesche compiler library."
                                :default t
                                :runs (steps (compile-source :source-files
                                                             '("core.c" "chunk.c" "compiler.c" "disasm.c" "math.c" "io.c"
                                                               "fs.c" "list.c" "array.c" "mem.c" "module.c"
                                                               "time.c" "object.c" "process.c" "repl.c" "scanner.c"
                                                               "string.c" "table.c" "value.c" "vm.c"))
                                             (create-static-library "libmesche.a"
                                                                    :c-flags (string-append "-I " (path-resolve "./include"))
                                                                    :c-libs "-lm")))))
